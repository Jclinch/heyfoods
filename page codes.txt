
// // // app/(root)/dashboard/page.tsx
// // "use client";

// // import React from "react";
// // import Image from "next/image";
// // import Discounts4U from "@/components/Discount4u";
// // import FreeDrinks from "@/components/FreeDrinks";
// // import Grilled from "@/components/Grilled";
// // import PartyJollof from "@/components/PartyJollof";
// // import AllRestaurants from "@/components/AllRestaurants";
// // import FilteredGrid from "@/components/FilteredGrid";
// // import { useFilter } from "@/context/FilterContext";

// // type Restaurant = {
// //   id: string | number;
// //   name: string;
// //   image: string;
// //   tags: string;
// //   rating: number;
// //   reviews: string;
// //   location: string;
// // };

// // const Home: React.FC = () => {
// //   const {
// //     allItems,
// //     filteredItems,
// //     selectedSort,
// //     setSelectedSort,
// //     resetFilter,
// //   } = useFilter();

// //   const parseReviews = (reviews: string): number => {
// //     const match = reviews.match(/(\d+)/);
// //     return match ? parseInt(match[0]) : 0;
// //   };
  
// //   const sortData = (data: Restaurant[], sortType: string | null): Restaurant[] => {
// //     const sorted = [...data];
// //     switch (sortType) {
// //       case "mostPopular":
// //       case "mostRated":
// //         return sorted.sort((a, b) => parseReviews(b.reviews) - parseReviews(a.reviews));
// //       case "nearest":
// //         return sorted.sort((a, b) => a.location.localeCompare(b.location));
// //       case "highestRated":
// //         return sorted.sort((a, b) => b.rating - a.rating);
// //       case "newest":
// //         return sorted.sort((a, b) => parseReviews(a.reviews) - parseReviews(b.reviews));
// //       default:
// //         return sorted;
// //     }
// //   };
  

// //   // Show loading fallback while context is initializing
// //   if (!Array.isArray(allItems) || !Array.isArray(filteredItems)) {
// //     return <div className="p-4 text-center">Loading restaurants...</div>;
// //   }

// //   const isFiltered = filteredItems.length !== allItems.length;
// //   const showFilteredGrid = selectedSort !== null || filteredItems.length !== allItems.length;

// //   return (
// //     <>
// //       {isFiltered ? (
// //         <div className=" filteredContent p-4 space-y-4 transition-opacity duration-500 ease-in-out opacity-100">
// //           <h2 className="text-xl font-semibold mb-4">
// //             {filteredItems.length} Stores near you{" "}
// //             <button
// //               onClick={resetFilter}
// //               className="text-red-500 text-sm ml-2 underline"
// //             >
// //               Reset
// //             </button>
// //           </h2>
// //           <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-x-3 gap-y-6">
// //             {filteredItems.map((item, index) => (
// //               <div
// //                 key={index}
// //                 className="rounded-lg p-3 hover:shadow-md transition"
// //               >
// //                 <Image
// //                   src={item.image}
// //                   alt={item.name}
// //                   className="rounded mb-2"
// //                   width={300}
// //                   height={100}
// //                   style={{ objectFit: "cover" }}
// //                 />
// //                 <h3 className="font-bold text-sm">{item.name}</h3>
// //                 <p className="text-xs text-gray-600">{item.tags}</p>
// //                 <div className="flex items-center gap-1 text-green-600 text-sm mt-1">
// //                   ‚≠ê {item.rating}{" "}
// //                   <span className="text-gray-500">({item.reviews})</span>
// //                 </div>
// //               </div>
// //             ))}
// //           </div>
// //         </div>
// //       ) : (
// //         <div className="fullpage flex w-full max-w-screen overflow-hidden transition-all duration-500 ease-in-out">
// //           <div className="w-full max-w-full overflow-x-hidden">
// //             {selectedSort !== null ? (
// //               <FilteredGrid
// //                 filteredItems={sortData(selectedSort)
// //                   .slice(0, 20)
// //                   .map((item) => ({
// //                     ...item,
// //                     id: item.id.toString(),
// //                     reviews: parseReviews(item.reviews),
// //                   }))}
// //               />
// //             ) : (
// //               <div className="mainpage p-4 space-y-4">
// //                 <div className="mt-[50px]">
// //                   <Discounts4U />
// //                 </div>
// //                 <PartyJollof />
// //                 <FreeDrinks />
// //                 <Grilled />
// //                 <AllRestaurants />
// //               </div>
// //             )}
// //           </div>
// //         </div>
// //       )}
// //     </>
// //   );
// // }; 



// // export default Home;






// // app/(root)/dashboard/page.tsx
// "use client";

// import React from "react";
// import Image from "next/image";
// import Discounts4U from "@/components/Discount4u";
// import FreeDrinks from "@/components/FreeDrinks";
// import Grilled from "@/components/Grilled";
// import PartyJollof from "@/components/PartyJollof";
// import AllRestaurants from "@/components/AllRestaurants";
// import FilteredGrid from "@/components/FilteredGrid";
// import { useFilter } from "@/context/FilterContext";

// type Restaurant = {
//   id: string;
//   name: string;
//   image: string;
//   tags: string;
//   rating: number;
//   reviews: string;
//   location: string;
// };

// const Home: React.FC = () => {
//   const {
//     allItems,
//     filteredItems,
//     selectedSort,
//     resetFilter,
//   } = useFilter();

//   const parseReviews = (reviews: string): number => {
//     const match = reviews.match(/(\d+)/);
//     return match ? parseInt(match[0]) : 0;
//   };

//   const sortData = (data: Restaurant[]): Restaurant[] => {
//     const sorted = [...data];
//     switch (selectedSort) {
//       case "mostPopular":
//       case "mostRated":
//         return sorted.sort((a, b) => parseReviews(b.reviews) - parseReviews(a.reviews));
//       case "nearest":
//         return sorted.sort((a, b) => a.location.localeCompare(b.location));
//       case "highestRated":
//         return sorted.sort((a, b) => b.rating - a.rating);
//       case "newest":
//         return sorted.sort((a, b) => parseReviews(a.reviews) - parseReviews(b.reviews));
//       default:
//         return sorted;
//     }
//   };

//   const isFiltered = filteredItems.length !== allItems.length;
//   const showFilteredGrid = selectedSort !== null || isFiltered;

//   return (
//     <>
//       {showFilteredGrid ? (
//         <div className="filteredContent p-4 space-y-4 transition-opacity duration-500 ease-in-out opacity-100">
//           <h2 className="text-xl font-semibold mb-4">
//             {filteredItems.length} Stores near you{" "}
//             <button
//               onClick={resetFilter}
//               className="text-red-500 text-sm ml-2 underline"
//             >
//               Reset
//             </button>
//           </h2>
//           <FilteredGrid
//             filteredItems={sortData(filteredItems).map((item) => ({
//               ...item,
//               reviews: parseReviews(item.reviews),
//               discount: item.discount || "No discount",
//               opensAt: item.opensAt || "00:00",
//               closesAt: item.closesAt || "23:59",
//               notice: item.notice || undefined,
//             }))}
//           />
//         </div>
//       ) : (
//         <div className="fullpage flex w-full max-w-screen overflow-hidden transition-all duration-500 ease-in-out">
//           <div className="w-full max-w-full overflow-x-hidden mainpage p-4 space-y-4">
//             <div className="mt-[50px]">
//               <Discounts4U />
//             </div>
//             <PartyJollof />
//             <FreeDrinks />
//             <Grilled />
//             <AllRestaurants />
//           </div>
//         </div>
//       )}
//     </>
//   );
// };

// export default Home;



































// app/(root)/dashboard/page.tsx
"use client";

import React from "react";
import Image from "next/image";
import Discounts4U from "@/components/Discount4u";
import FreeDrinks from "@/components/FreeDrinks";
import Grilled from "@/components/Grilled";
import PartyJollof from "@/components/PartyJollof";
import AllRestaurants from "@/components/AllRestaurants";
import FilteredGrid from "@/components/SortedGrid";
import { useFilter } from "@/context/FilterContext";

type Restaurant = {
  id: string;
  name: string;
  image: string;
  tags: string;
  rating: number;
  reviews: string;
  location: string;
};

const Home: React.FC = () => {
  const {
    allItems,
    filteredItems,
    selectedSort,
    resetFilter,
  } = useFilter();

  const parseReviews = (reviews: string): number => {
    const match = reviews.match(/(\d+)/);
    return match ? parseInt(match[0]) : 0;
  };

  const sortData = (data: Restaurant[]): Restaurant[] => {
    const sorted = [...data];
    switch (selectedSort) {
      case "mostPopular":
      case "mostRated":
        return sorted.sort((a, b) => parseReviews(b.reviews) - parseReviews(a.reviews));
      case "nearest":
        return sorted.sort((a, b) => a.location.localeCompare(b.location));
      case "highestRated":
        return sorted.sort((a, b) => b.rating - a.rating);
      case "newest":
        return sorted.sort((a, b) => parseReviews(a.reviews) - parseReviews(b.reviews));
      default:
        return sorted;
    }
  };

  const isFiltered = filteredItems.length !== allItems.length;
  const showFilteredGrid = selectedSort !== null || isFiltered;

  return (
    <>
       <div className="fullpage flex w-full max-w-screen overflow-hidden transition-all duration-500 ease-in-out">
           <div className="w-full max-w-full overflow-x-hidden">
            
              <div className="mainpage p-4 space-y-4">
                <div className="mt-[50px]">
                  <Discounts4U />
                </div>
                <PartyJollof />
                <FreeDrinks />
                <Grilled />
                <AllRestaurants />
              </div>
            )}
          </div>
        </div>
      )}
    </>
  );
}; 

export default Home;












<div className=" filteredContent p-4 space-y-4 transition-opacity duration-500 ease-in-out opacity-100">
           <h2 className="text-xl font-semibold mb-4">
             {filteredItems.length} Stores near you{" "}             <button
              onClick={resetFilter}
              className="text-red-500 text-sm ml-2 underline"
            >
              Reset
            </button>
          </h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-x-3 gap-y-6">
            {filteredItems.map((item, index) => (
              <div
                key={index}
                className="rounded-lg p-3 hover:shadow-md transition"
              >
                <Image
                  src={item.image}
                  alt={item.name}
                  className="rounded mb-2"
                  width={300}
                  height={100}
                  style={{ objectFit: "cover" }}
                />
                <h3 className="font-bold text-sm">{item.name}</h3>
                <p className="text-xs text-gray-600">{item.tags}</p>
                <div className="flex items-center gap-1 text-green-600 text-sm mt-1">
                  ‚≠ê {item.rating}{" "}
                  <span className="text-gray-500">({item.reviews})</span>
                </div>
              </div>
            ))}
          </div>
        </div>